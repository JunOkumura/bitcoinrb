require 'spec_helper'

describe Bitcoin::Message::GetHeaders do

  describe 'to_pkt' do
    subject {
      blocks = [
          '000000000005113cca98f538758427316cb755430a84d10be5cc376e98f78ad1',
          '00000000000106bae568195360d78f6335aebe99f9a5393f293fb77e15b7fc16',
          '00000000000034e604d81dcbb0762c31f15a1d6bb27d0aef23f34d0c1b1643b2'
      ]
      Bitcoin::Message::GetHeaders.new(70015, blocks).to_pkt
    }
    it do
      expect(subject).to eq('0b11090767657468656164657273000085000000aa956d887f11010003d18af7986e37cce50bd1840a4355b76c3127847538f598ca3c1105000000000016fcb7157eb73f293f39a5f999beae35638fd760531968e5ba06010000000000b243161b0c4df323ef0a7db26b1d5af1312c76b0cb1dd804e6340000000000000000000000000000000000000000000000000000000000000000000000000000'.htb)
    end
  end

  describe 'parse from payload' do
    subject{
      Bitcoin::Message::GetHeaders.parse_from_payload('7f11010003d18af7986e37cce50bd1840a4355b76c3127847538f598ca3c1105000000000016fcb7157eb73f293f39a5f999beae35638fd760531968e5ba06010000000000b243161b0c4df323ef0a7db26b1d5af1312c76b0cb1dd804e6340000000000000000000000000000000000000000000000000000000000000000000000000000'.htb)
    }
    it do
      expect(subject.version).to eq(70015)
      expect(subject.hashes.length).to eq(3)
      expect(subject.hashes[0]).to eq('000000000005113cca98f538758427316cb755430a84d10be5cc376e98f78ad1')
      expect(subject.hashes[1]).to eq('00000000000106bae568195360d78f6335aebe99f9a5393f293fb77e15b7fc16')
      expect(subject.hashes[2]).to eq('00000000000034e604d81dcbb0762c31f15a1d6bb27d0aef23f34d0c1b1643b2')
      expect(subject.stop_hash).to eq('0000000000000000000000000000000000000000000000000000000000000000')
    end
  end

end
